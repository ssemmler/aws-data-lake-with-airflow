AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: 'It creates a single user with Programmatic access that is a member of a data lake group. Enables an access key ID and secret access key for the AWS API, CLI, SDK, and other development tools. 
The groups each have different IAM policies associated with them. Note: This example also creates an AWSAccessKeyId/AWSSecretKey pair associated with the new user.'
Parameters:
  GroupName:
    Type: String
    Default: DataLakeAnalystGroup
    Description: A data lake group
    AllowedValues:
      - DataLakeAdminGroup
      - DataLakeDeveloperGroup
      - DataLakeScientistGroup
      - DataLakeAnalystGroup
      - DataLakeExecutivGroup
      - DownstreamSystemGroup
  FirstName:
    Type: String
    Description: New account firstname. Alphanumeric characters only and must start with a uppercase letter.
    AllowedPattern: "^[A-Z][A-Za-z0-9]+$"
    ConstraintDescription: Alphanumeric characters only and must start with a uppercase letter
  LastName:
    Type: String
    Description: New account lastname. Alphanumeric characters only and must start with a uppercase letter.
    AllowedPattern: "^[A-Z][A-Za-z0-9]+$"
    ConstraintDescription: Alphanumeric characters only and must start with a uppercase letter
Resources:
  DataLakeUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Join
        - ''
        - - 'DLake-'
          - !Ref 'FirstName'
          - '-'
          - !Ref 'LastName'
          - '-srv'
      LoginProfile:
        Password: !Ref 'Password'
        PasswordResetRequired: 'True'
  DataLakeGroups:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'GroupName'
      Users: [!Ref 'DataLakeUser']
  DataLakeKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'DataLakeUser'
Outputs:
  UserName:
    Value: !Join
      - ''
      - - 'DLake-'
        - !Ref 'FirstName'
        - '-'
        - !Ref 'LastName'
    Description: IAM Service User Account Name with Programmatic access. Therefore only AccessKey and SecretKey are relevant.
  GroupName:
    Value: !Ref 'GroupName'
    Description: IAM Data Lake Group in which the user is member of.
  AccessKey:
    Value: !Ref 'DataLakeKeys'
    Description: AWSAccessKeyId of new user
  SecretKey:
    Value: !GetAtt [DataLakeKeys, SecretAccessKey]
    Description: AWSSecretKey of new data lake user
